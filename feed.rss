<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content"><channel><title>Tech Diarios</title><description>Here I'll share my daily tech related works with you</description><link>https://tech-diarios.io</link><language>en</language><lastBuildDate>Wed, 1 Sep 2021 10:04:51 +0430</lastBuildDate><pubDate>Wed, 1 Sep 2021 10:04:51 +0430</pubDate><ttl>250</ttl><atom:link href="https://tech-diarios.io/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://tech-diarios.io/posts/Filecoin/filecoin-explanation-in-depth-part-2</guid><title>Filecoin explanation in depth (ep-02)</title><description>Sealing a sector</description><link>https://tech-diarios.io/posts/Filecoin/filecoin-explanation-in-depth-part-2</link><pubDate>Wed, 1 Sep 2021 09:09:00 +0430</pubDate><content:encoded><![CDATA[<h1>Filecoin explanation in depth (ep-02)</h1><p>These episodes are explanations of Filecoin more deeply than the other post I have as ‚ÄúFilecoin explanation in a very simple way‚Äù.</p><h3>Before a Sector can be used, the miner must seal the Sector that means encode the data in the Sector to prepare it for the proving process. This process contains 7 steps each would be explained in the following.</h3><p align="center">
<img src="https://tech-diarios.io/Filecoin/sealing%20sector.png" style="border-radius:2%">
</p><h2>Creating Sectors</h2><p>Sectors can be created in two ways,with deals(pledge a sector) or as ‚ÄúCommitted Capacity‚Äù</p><ul><li>Create a committed capacity sector means to create a sector without deals</li></ul><ul><li>Pledge a sector: Accepting some client deals. When you accept a client deal, you‚Äôll create the sector, put the deal into that sector and keep it open for 1h to hopefully put more deals into the sector(so you have to do less work to accept more deals).</li></ul><ul><li>Committed capacity sectors can be upgraded to sectors with deals(requires resealing the entire sector) means that initial pledge doesn't have to be paid again.</li></ul><h2>Packaging</h2><p>The packaging step fills the sector with padding data(bunch of null bytes) to make sure it has the current size.</p><h2>PreCommit1</h2><p>We perform ‚ÄúReplication‚Äù with SDR which is a single-threaded process. There‚Äôs a need of minimum 64GiB of RAM, and using more memory causes more speed. As this process is single-thread, gpu doesn‚Äôt help at all.</p><p>This process creates 11 layer files, 12<em>sector size(12</em>32GiB). You are able to discard most of that after this sector is fully sealed.</p><ul><li>Takes 4h on AMD Zen2 based CPUs.</li></ul><h2>PreCommit2</h2><p>There is a test for a few merkle trees over the data</p><ul><li>3*x sector size</li></ul><ul><li>4-8GiB RAM</li></ul><ul><li>Parallelizable(gpu over 4GB memory)</li></ul><ul><li>Takes 40m on 2080Ti</li></ul><h2>PreCommit</h2><p>We send a PreCommit message that includes a PreCommit Deposit(expected block reward from sector over 20 days) to the miner actor(on chain transaction). Process is proving that the data is being replicated.</p><p>The message also includes a sealed CID replica, list of DealIDs, and expiration time.</p><p>After the message lands on the chain, we would wait for a random seed for the Commit stage.</p><h2>Commit</h2><p>In the Commit1 stage we read a challenge using random input from the previous. We pass that as an input to the Commit2 step. Then we compute the PoRep which‚Äôs been compressed by the SNARK algorithm(omg: 10-20 mg -&gt; 192 bytes). To do this compression there‚Äôs a 170 GiB memory or 120GiB of RAM and a bit of swap required.</p><ul><li>The whole process takes about an hour with a 2080Ti for a 32 GiB sector.</li></ul><h2>SubmitCommit</h2><p>We send the commit message or the PoRep proof to the miner actor, wait for the miner actor to verify it and if it is ok, it tells the power actor to grant us some power for the sector. It also tells the main actor that deals in the sector are now being proven which mean we get block rewards and get paid for the deals we‚Äôve put in the sector. In the upcoming post I will explain the storage subsystem.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/SwiftUI/swiftUI-SeanAllen-course-notes</guid><title>SwiftUI Sean Allen course notes</title><description></description><link>https://tech-diarios.io/posts/SwiftUI/swiftUI-SeanAllen-course-notes</link><pubDate>Sun, 22 Aug 2021 19:47:00 +0430</pubDate><content:encoded><![CDATA[<h1>SwiftUI Sean Allen course notes</h1><h2>I finally finished the sean allen SwiftUI course and here‚Äôs what I‚Äôve gotten through his awesome course</h2><ul><li>If you‚Äôre not going to get a subclass from your class, make it final.</li></ul><ul><li>Concepts of declarative(SwiftUI) and imperative(UIKit).</li></ul><ul><li>In integrating SwiftUI with UIKit, what is happening is that the body in SwiftUI is being replaced by a ViewController.</li></ul><ul><li>State variables (@State) are unique for each view and they are private.</li></ul><ul><li>We must be careful using bindings, because for example if you pass binding through 5 views they all would be tight together.</li></ul><ul><li>When we‚Äôre conforming to UIViewControllerRepresentable we must add protocol stubs which Xcode would yell at us about, but what the IDE suggests isn‚Äôt the exact type which we‚Äôd want to have. In order to fix this here‚Äôs the tricky line:</li></ul><pre><code>
‚Äã  Typealias UIViewControllerType = YourClassViewController‚Äã  
‚Äã  
</code></pre><p>‚ÄãAnd after Command + B we would get proper stubs; so you can remove tricky line.</p><ul><li>When we are going to pass a viewModel between views we use @ObservedObject instead of @StateObject</li></ul><ul><li>In code navigationTitle goes inside the NavigationView and outside the inside view :))</li></ul><pre><code>
‚Äã  NavigationView {
‚Äã    Text("Navigation List View").navigationTitle("üçü Appetizers") 
‚Äã  }‚Äã  
‚Äã  
</code></pre><ul><li>Instead of having a list with id, we can conform our model to Identifiable and remove the id</li></ul><pre><code>
  struct Appetizer: Decodable 
    List(MockData.appetizer, id: \.id) { appetizer in
      Text(appetizer.name)
  }‚Äã  
‚Äã  
</code></pre><pre><code>
  struct Appetizer: Decodable, Identifiable
    List(MockData.appetizer) {  appetizer in
      Text(appetizer.name)
  }‚Äã  
  ‚Äã  
</code></pre><ul><li>L means local variable here</li></ul><p align="center">
<img src="https://tech-diarios.io/SwiftUI/local-variable.png" style="border-radius:3%">
</p><ul><li>Setting data in SwiftUI must be in main queue</li></ul><pre><code>
  NetworkManager.shared.getAppetizers { (result) in
    DispatchQueue.main.async {
      switch result {
        case .success(let appetizers):
          self.appetizers = appetizers  
        case .failure(let error):
          print(error.localizedDescription)
        } 
      }        
    }
    
</code></pre><ul><li>We use main queues for changes in UI that's why when Sean had a class with a published property that changes the UI, he set edits on the variable to be in a main queue</li></ul><pre><code>
    final class ImageLoader: ObservableObject {
      @Published var image: Image? = nil 
      
      func load(fromURLString urlString: String) {
        NetworkManager.shared.downloadImage(fromURLString: urlString) { (uiImage) in
          guard let uiImage = uiImage else { return }
          DispatchQueue.main.async {
            self.image = Image(uiImage: uiImage)
          }
        }
      }
    }

</code></pre><ul><li>There was a way that people usually create lists as we had at the first of the course<ul></ul></li></ul><pre><code>
      List(viewModel.appetizers) { appetizer in
        AppetizerListCell(appetizer: appetizer)
        .onTapGesture {
          viewModel.selectedAppetizer = appetizer
          viewModel.isShowingDetail = true
        }
      }

</code></pre><p>but if you want to provide swipe to delete action you must create your list in a different way</p><pre><code>
      List {
        ForEach(orderItems) { appetizer in
          AppetizerListCell(appetizer: appetizer)
        }
        .onDelete(perform: { indexSet in
          orderItems.remove(atOffsets: indexSet)
        })
      }

</code></pre><ul><li>Command + Shift + A = switch dark mode and light mode in simulator.</li><li>If you've come from UIKit like me, we always tend to know what's really going on behind the code, and same here in SwiftUI I couldn't understand well enough how @State works, because structs are value types and each time they change we would have a new one in storage.</li><li>So I figure it out:when a state variable changes, what SwiftUI would understand is that the view is invalid and so recomputed the whole body again.</li><li>What I thought before on @Binding was like the "inout" keyword, but I was wrong. The two variables aren't the same in storage, with binding we bind the second variable into the source of truth.</li><li>Another way to use an environment object is when you want to pass a binding object down more than three views, you can use environment object instead.</li></ul><h3>And for last here's the github repos:</h3><ul><li><a href="https://github.com/masein/weather-swift-ui">Weather</a></li><li><a href="https://github.com/masein/appetizer-swift-ui">Appetizer</a></li><li><a href="https://github.com/masein/apple-frameworks-swift-ui">Apple Frameworks</a></li></ul>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/Filecoin/filecoin-explanation-in-depth-part-1</guid><title>Filecoin explanation in depth (ep-01)</title><description>Terms &amp; Storage Market</description><link>https://tech-diarios.io/posts/Filecoin/filecoin-explanation-in-depth-part-1</link><pubDate>Sat, 14 Aug 2021 17:37:00 +0430</pubDate><content:encoded><![CDATA[<h1>Filecoin explanation in depth (ep-01)</h1><p>These episodes are explanations of Filecoin more deeply than the other post I have as ‚ÄúFilecoin explanation in a very simple way‚Äù.</p><p>Filecoin isn‚Äôt a Proof-of-Work blockchain. Power is based on how much data you store, and prove over time, which is like Hash Rate in PoW blockchains.</p><h3>Actors</h3><p>All interactions with the chain are through actors. Every actor has Balance, Nonce, Code, and State.</p><p>There is a key address assigned to each actor.</p><ul><li>Power Actor is responsible for keeping the network power that is mostly just interacting with miner actors</li></ul><ul><li>Miner Actor holds metadata about the miner, tracks sector information, and handles storage events. They also ensure that data is correctly stored over time.</li></ul><p>In order to understand Filecoin more deeply, covering some terms are necessary:</p><h3>Fragment</h3><p>A part of the data stored in a Decentralized Storage Network(DSN).</p><h3>Sector</h3><p>Disk space provided to the network by Storage Miners.</p><p>Bigger sectors require more resources to handle, but also require less interactions with the chain.</p><h3>AllocTable</h3><p>A data structure that tracks parts and their allocated sectors.Updates on every block in the ledger and it‚Äôs Merkle root are stored in the latest block.Preserve the state of the DSN for quick lookup during validation and verification.</p><h3>Commitment</h3><p>A commitment to provide a sector to the network.Storage miners must submit pledges to the ledgers in order to begin accepting orders in the storage market.</p><h3>Pledge</h3><p>Includes the size of the pledge department and the collateral stored by miners.(FIL)</p><h3>SNARK</h3><p>zk-SNARKs are <strong>a type of zero-knowledge proof construction</strong> that have become popular in various blockchain applications, notably to enable private crypto transactions.</p><p>Now let's have a story of how orders work:</p><p>Imagine you want 20GB storage and I‚Äôm your storage miner. You bid an order to the orderbook via PUT. In your order you also specify the FIL you‚Äôre going to pay for this service and number of copies you want to have. You can also submit multiple orders or specify replication factors that would help having higher tolerance to storage failures.</p><p>I as a storage miner will deposit collateral and pledge my storage to the network via a pledged transaction(Manage.PledgeSector). The collateral inside a transaction is stored during the time service is provided; If the miner generates storage vouchers for the data it promises to store, the collateral will be returned, and so if some storage certifications fail, a percentage of the collateral is lost.</p><p>In order to get how this penalty works we have to get familiar with fault tolerance in this blockchain:</p><p>If a large amount of evidence is missing or invalid(that means I as a miner have passed the threshold), the network would consider me to be faulty, the order would be a failure, and then reintroduce the same order to the market.</p><p>Now, there are lots of storage miners as I am, so your order can be matched with them. But if each storage miner that is storing your peace is faulty(by each I mean more than our fault tolerance) then the peace is lost and the client gets refunded.</p><p>Once the pledged transaction appears in the blockchain(AllocTable), I can now offer my storage in the storage market(Put.AddOrders). Inside my offer I can set prices and add asking orders to the market‚Äôs orderbook.</p><p>When a matching order is found(Put.MatchOrders),the client sends the piece to the miner(PUT.SendPiece ran by client and Put.RecievePiece by the miner). As the data is received, we both sign a deal order and submit it to the storage market order book.</p><p>The network keeps track of each sector through an allocation table. When a deal order is signed, the network assigns the data to the miner and makes a note of it in AllocationTable(Manage.AssignOrders). At the time a storage miner sector is filled, the sector is sealed; Sealing is a slow sequential operation which transforms the data in a sector into a replica(Manage.SealSector).</p><p>Replica: A unique physical copy of the data that is associated with the public key of the storage miner.</p><p>Storage miners must repeatedly generate proofs of replication to guarantee they are storing the data. Proofs are posted in the blockchain and the network would verify them and make them pay if their proofs are not valid(as mentioned above).</p><p>In the next post we will get deeper in Sealing a sector and how each function in sealing works.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/Filecoin/filecoin-explanation-in-a-simple-way</guid><title>Filecoin explanation in a very simple way</title><description>We‚Äôre gonna review Filecoin at a high level.</description><link>https://tech-diarios.io/posts/Filecoin/filecoin-explanation-in-a-simple-way</link><pubDate>Wed, 4 Aug 2021 15:07:00 +0430</pubDate><content:encoded><![CDATA[<h1>Filecoin explanation in a very simple way</h1><p>‚ÄúThe internet is in the middle of a revolution: centralized proprietary services are being replaced with decentralized open ones‚Äù this is how Protocol Labs started its white paper on Filecoin.</p><p>In this post we‚Äôre gonna review Filecoin at a high level.(We have low level explanations on each topic in other posts named by Filecoin deep explanation)</p><p>So, what‚Äôs Filecoin?</p><p>According to their abstraction section, Filecoin is a decentralized storage network that turns cloud storage into an algorithmic market. An algorithm market is a market without third parties to verify the market.(i.e. decentralized exchanges)</p><p>In this algorithmic market after the client and miner reach an agreement, the miner is obliged to continue to provide evidence of it‚Äôs stored data, because the difference here is that trades are not one time and you as a client must have insurance that your data is stored over time. The evidence provided by miners is publicly available as any other blockchain platforms and can be verified by everyone.</p><h2>User types</h2><p>There are 3 types of users in Filecoin network: client - storage miner - retrieval miner</p><p>Client and storage miners seem to be obvious, but what do retrieval miners really do? Are they just retrieving data and passing them to clients?</p><p>Retrieval miners can get data from clients or storage, they provide customer data on their request and they also can act as storage miners.</p><h2>Market types</h2><h4>Storage Market</h4><p>Customer bids an order to order book, including how much is he or she offering to storage miners in order to store their data, on the other hand miner‚Äôs prices and storages are available in the order book of the network. They have been guaranteed through a protocol including penalty(collateral), that if the miner didn't stick to the numbers that had been provided by itself, must pay.</p><p>When the matching ask and bid order is found, the client sends the piece to the miner, they sign a deal order and submit it to the blockchain.</p><p>Storage miners make a copy of data they‚Äôre storing in a number that‚Äôs been requested by the customer. They must repeatedly generate proof of replication to guarantee that they are storing the data. Network checks whether the required proofs for each are present, if they are valid, and acts accordingly.</p><h4>Retrieval Market</h4><p>In the retrieval market which is an off chain exchange, clients and retrieval miners discover each other in a peer-to-peer way.</p><p>Retrieval miners set theri price and add an ask order to the market‚Äôs orderbook. They announce their pieces by gossiping their ask orders to the network. Being off chain and gossiping simply means that each node passes data to another and this flow goes on, so everyone would have the data they needed.</p><p align="center">
<img src="https://tech-diarios.io/Filecoin/gossip.png" style="border-radius:15%">
</p><p>Clients do their bid order like they do in the retrieval market, and the retrieval miners check if their orders match with the clients bid order.</p><p>Once orders are matched, the miner sends parts of data &amp; client sends micro-payments. When the piece is received, both the miner and the client sign a deal order and submit it to the blockchain.</p><h2>Consensus Algorithms</h2><p>Proof of work schemes often require solving puzzles whose solutions are not reusable(useless, just securing network) and are wasteful(parallel) work.</p><p>Filecoin proposes a useful work consensus protocol(Proof-of-Spacetime), where the probability that the network elects the miner to create a new block is proportional to their storage currently in use in relation to the rest of the network.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/AppleDesignPrinciples/apple-design-priciples-part-2</guid><title>Apple design principles (ep-02)</title><description>This section contains Visibiity, Consistency, Grouping, Mapping, and Affordance principles</description><link>https://tech-diarios.io/posts/AppleDesignPrinciples/apple-design-priciples-part-2</link><pubDate>Sun, 27 Jun 2021 09:17:00 +0430</pubDate><content:encoded><![CDATA[<h1>Apple design principles (ep-02)</h1><h2>Visibility</h2><p>The usability of a design is greatly improved when controls and information are clearly visible.</p><p>Again in cars the instrument cluster which presents status information and warning indicators directly in front of the driver which hiding them or putting them elsewhere would hurt usability. Or consider the navigation in the Clock app, what if that was hidden in the hamburger menu.</p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/timer-tabbar-menu.png">
<img src="https://tech-diarios.io/AppleDesignPrinciples/timer-hamburger-menu.png">
</p><p>It seems obvious. But there's a trade off here and we should be careful because densely packed interfaces can be overwhelming and they can slow decision making, especially for people who are new to your app.</p><h2>Consistency</h2><p>This principle is about representing similar design features in similar ways. You expect the brake to be on the left, and the accelerator to be on the right. It is because of consistency in cars, that we don't have to learn how to drive a car every time we get a new car.</p><p>Mike then started to talk about two famous icons for share button:</p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/share-buttons.png" style="border-radius:5%">
</p><p>He said using the right icon which is used on websites and other platforms seems to be rational, but not the right call; Because it is the best to be consistent with the symbol that the user is most familiar with.</p><p>As it may have occurred to your mind, there's always the impulse to do things a little bit differently, and this is a really good thing because this is how innovation happens.</p><p>There's another consistency, called internal consistency which is about designing controls to share a similar look and feel that match each other; for example Text in your app should have a limited number of font faces and colors. Internal consistency gives people a deeper sense of product integrity.</p><h2>Grouping</h2><p>Now grouping, let's talk about light switches in a room. Obviously the bathroom light switch is in the bathroom, the hallway light switch is in the hallway and the bedroom light switch is in the bedroom. Greater proximity also makes ergonomic sense.</p><p>In general the closer you are to an object or region of interest, the more likely you are to want to interact with it and control it.</p><p>If in the hallway, they're switches for light and shade, it would be better to seperate shade out from rest.</p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/light-switches.png" style="border-radius:3%">
</p><p>Let's see some examples in apps:</p><ul><li>Sketch: Transform and editing tools, path finding operations and the layer ordering actions are grouped to cluster related controls with each other.</li></ul><p align="center">
  <img src="https://tech-diarios.io/AppleDesignPrinciples/sketch.png" style="border-radius:15%">
  </p><h2>Mapping</h2><p>Mapping is about designing the controls to resemble the objects that they affect.</p><p>The progress bar here indicates the size of the text and makes you wonder how to control the size of the ABC.</p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/progressbar.png" style="border-radius:4%">
</p><h2>Affordance</h2><p>In my dictionary, affordance is the quality or property of an object that defines its possible uses or makes clear how it can or should be used.</p><p>Imagine a Frisbee, our notion about how we interact with this Frisbee, which is not an attribute of the object itself, it is more about the relationship that individuals have to an object.</p><p>For example a Frisbee affords Mike with a possibility of catching and throwing, but for his dog it's just catching.</p><p>Manufactured objects include cues to evoke affordances. They let people know what actions are possible and help people to know the correct or the intended ways of interacting.</p><p>Buttons afford tapping.(same in apps and physical keyboards) The button after all is just a highly abstracted version of a real world button. And my favourite is tapping on the weather app, we see it slides up a little bit. This suggests the possibility that the contact areas can be scrolled.</p><p>Let's get a break with another term here: "Progressive disclosure" is a technique for moving from abstract to specific. MIke got his own example:</p><p><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2813">He then asks what kind of</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2814">cheese, cheddar, Swiss, Jack,</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2815">Gruyere, cottage?</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2817">"Cheddar," I say.</a></p><p><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2819">He then asks whether I would</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2820">like bacon, egg, avocado on it?</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2823">"None," I say.</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2825">I am trying to keep my figure.</a></p><p><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2828">He then asks whether I'd like</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2829">salad, fries or onion rings.</a></p><p><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2832">"Onion rings," I say.</a></p><p><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2834">He then asks if I realize that</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2835">cheeseburgers and onion rings</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2836">are very high in calories, to</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2838">which I reply, "Fake news"</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2840">.</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2841">This in a nutshell is</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2852">the principle of progressive</a><a href="https://developer.apple.com/videos/play/wwdc2017-802/?time=2854">disclosure.</a></p><p>Assume that Mike wants a cheeseburger but if he knew that the restaurant has pepperoni, he would have gotten them. Progressive disclosures can also bury the information.</p><p>Well, discussions about how to properly use progressive disclosure often come down to the 80/20 rule which says 80 percent of a system's effects comes from 20% of its causes.</p><p>For an app, this might mean that 80% of it's benefits come from 20% of its actions. Lets take a look at the print section in the preview app.</p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/print-menu.png" style="border-radius:5%">
</p><p>What the user needs most of the time is how many copies, which printer they want, or what pages need to be printed.</p><h2>Symmetry</h2><p>Types of symmetry:<br><br></p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/symmetry-types.png" style="border-radius:2%">
</p><p>Symmetrical forms are efficient forms, and we tend to associate them with good health, stability, balance, and orderliness. We consider them aestherically pleasing, probably for very good evolutionary reasons. Every type of plant or animal, deonstrates one or more types of symmetry.</p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/symmetric-flower.jpg" style="border-radius:10%">
</p><p>And most human made objects do so as well.<br><br></p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/symmetric-car.jpg" style="border-radius:10%">
</p><p>The design principles express fundamental truths about human perception and cognition. They are simple, but powerful reminders aboute the true nature and purpose of design</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/AppleDesignPrinciples/apple-design-priciples-part-1</guid><title>Apple design principles (ep-01)</title><description>In WWDC 2017 Mike Stern describes design principles in order to help developers and designers to have better apps, he starts by describing the airport signs which help people navigating through complex environment quickly and successfully. These signs that we follow are called wayfinding systems.</description><link>https://tech-diarios.io/posts/AppleDesignPrinciples/apple-design-priciples-part-1</link><pubDate>Sun, 13 Jun 2021 12:18:00 +0430</pubDate><content:encoded><![CDATA[<h1>Apple design principles (ep-01)</h1><p>In WWDC 2017 Mike Stern describes design principles in order to help developers and designers to have better apps, he starts by describing the airport signs which help people navigating through complex environment quickly and successfully. These signs that we follow are called wayfinding systems.</p><h4>Let's get deeper into the wayfinding systems which airports need to think deeply in the concept.</h4><ul><li>they offer a comprehensive and understandable list of general locations which people can visit.</li><li>they provide needed detail about what's in these locations.</li><li>they are highly contextual.</li><li>as we navigate deeper into the system they become more specific.</li><li>they help people to orient themselves by clearly highlighting their current location relative to other locations.</li><li>they provide a clear exit path.<ul></ul></li></ul><p>What Mike means is that your app's interface is really just one big old wayfinding system.</p><h4>You may go through your app, one screen at a time, and ask yourself, does every screen help:</h4><ul><li>people to know where they are?</li><li>providing options to people to tell them where else they can go?<ul></ul></li></ul><p>Next principle is feedback, Mike switched to cars, because they're great way for us to learn about the design principle of feedback Forms of feedback in cars: - status feedback, let us know how the car is doing - completion feedback, let us know whether the actions we've performed are completed successfully or failed - warning feedback, to tell us about potential problems - error feedback, let us know when something we've tried to do has caused an error Now let get deeper in these feedback by their examples in cars and apps: 1. Status - like gears, fuel level and current speed</p><p align="center">
  <img src="https://tech-diarios.io/AppleDesignPrinciples/mercedes.jpg">
</p><ul><li>also in calendar, mail, and camera app<ul></ul></li></ul><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/calendar.png">
<img src="https://tech-diarios.io/AppleDesignPrinciples/mail.png">
<img src="https://tech-diarios.io/AppleDesignPrinciples/camera.png">
</p><ol start="2"><li>Completion<ul><li>Door lock sound, engine start sound. It's the car's way of saying it is all good, I'm doing exactly what it is that you want me to do.</li><li>Sound of locking phone, animation and sound of successful Apple Pay</li></ul></li></ol><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/apple-pay.png">
</p><p>‚Äã These cues are discrete, and they're non-invasive, but they are hard to ignore and they provide necessary reassurance that our devices are performing as expected.<br>‚Äã<br>3. Warnings<br><br> - low fuel, low oil.<br><br> <img src="https://tech-diarios.io/AppleDesignPrinciples/lowfuel.png" alt="lowfuel" style="zoom:33%;" /><br><br><br> They help people to understand in advance about potential errors.<br><br>4. Errors - If you try to start a car without gas, you'll get an error message.<br><br></p><p align="center">
  <img src="https://tech-diarios.io/AppleDesignPrinciples/error.png">
  </p><p>It's best to help people avoid getting errors, here in the Thing3 app if you type in the date June 31st, which does not exist, the app doesn't throw up an error or showing a warning; instead it automatically corrects the date and helps users not to get a validation error.<br><br></p><p align="center">
<img src="https://tech-diarios.io/AppleDesignPrinciples/things3.png">
</p><h4>Feedback answers these questions:</h4><ul><li>what can I do?</li><li>what just happened?</li><li>what's happening?</li><li>what will happen in the future?<ul></ul></li></ul><p>Imagine yourself sitting in front of somebody who hasn't used your app. Let them work with your app and then describe the app, guide them along, explain to them what's happening, and what they should be paying attention to. Let them use the app again. Now consider how what you've said might differ from what the app is communicating. In Mike's experience, when someone needs to explain the design, it's usually more clear that the design itself. What people tell, fills in the gaps that are left by their design.<br><br>The next design principle is related to feedback, and that is the principle of visibility, which I'll cover in the next episode.</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/adding-ssh-key-in-mac</guid><title>Adding your SSH key to the ssh-agent in macOS</title><description></description><link>https://tech-diarios.io/posts/adding-ssh-key-in-mac</link><pubDate>Wed, 12 May 2021 17:23:00 +0430</pubDate><content:encoded><![CDATA[<h1>Adding your SSH key to the ssh-agent in macOS</h1><h2>You have two options in order to use your IaaS which SSH keys are prefered, here we have a quick tutorial on adding them to ssh-agent in order to access server</h2><ol><li>open your terminal and start the ssh-agent in background.</li></ol><pre><code>
 eval "$(ssh-agent -s)"
 
</code></pre><ol start="2"><li>as I didn't have config in ~/.ssh I created the file.</li></ol><pre><code>
touch ~/.ssh/config

</code></pre><ol start="3"><li>now in config file add the following lines and the path of your private key.</li></ol><pre><code>
Host *
  AddKeysToAgent yes
  IdentityFile ~/.ssh/privateKeyName.pem
  
</code></pre><ol start="4"><li>Add your SSH private key to the ssh-agent</li></ol><pre><code>
ssh-add -K ~/.ssh/privateKeyName

</code></pre>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-4</guid><title>Quick summery on TRON (ep-04)</title><description>Types of accounts in Tron blockchain</description><link>https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-4</link><pubDate>Mon, 10 May 2021 17:41:00 +0430</pubDate><content:encoded><![CDATA[<h1>Quick summery on TRON (ep-04)</h1><h2>In this post we will get to know types of accounts in TRON blockchain</h2><p>TRON has three types of account which are named as Normal, AssetIssue and Contract in the type variable of it's structure.<br><br>- Normal account is used for standard transaction<br>- AssetIssue account is used for storing TRC-10 tokens(these tokens can be used to activate an account.)<br>- Contract account is for smart contracts which is created and triggered by Normal account.<br><br>In order to create an account you may first register a random offline keypair with address and private key which is not acceptable by the network at first. in order to activate the account there are three ways which one of them is to transfer TRC-10 tokens to the new account.</p><pre><code>message‚Äã ‚ÄãAccount‚Äã { ‚Äã
  message‚Äã ‚ÄãVote‚Äã {
  ‚Äã   bytes‚Äã vote_address = ‚Äã1‚Äã; }‚Äã
  ‚Äã‚Äãint64‚Äã vote_count = ‚Äã2‚Äã;
  ‚Äã‚Äã‚Äãbytes‚Äã accout_name = ‚Äã1‚Äã;
  ‚Äã‚Äã‚ÄãAccountType type = ‚Äã2‚Äã;
  ‚Äã‚Äã‚Äã‚Äãbytes‚Äã address = ‚Äã3‚Äã;
  ‚Äã‚Äã‚Äã‚Äã‚Äãint64‚Äã balance = ‚Äã4‚Äã;
  ‚Äã‚Äã‚Äã‚Äã‚Äã‚Äãrepeated‚Äã Vote votes = ‚Äã5‚Äã;
  ‚Äã‚Äã‚Äã‚Äã‚Äã‚Äãmap&lt;‚Äãstring‚Äã, ‚Äãint64‚Äã&gt; asset = ‚Äã6‚Äã;
} 
</code></pre>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-3</guid><title>Quick summery on TRON (ep-03)</title><description>We will get deeper in bandwidth and energy</description><link>https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-3</link><pubDate>Sun, 9 May 2021 09:51:00 +0430</pubDate><content:encoded><![CDATA[<h1>Quick summery on TRON (ep-03)</h1><h2>In this post we will get deeper in bandwidth and energy</h2><p>TRON Bandwidth and TRON Energy are the two key resources that can help users earn more TRX tokens by freezing their digital assets in the TRX wallet and also is important for users in creating and operating smart contracts..</p><p>Bandwidth and Energy are drived from freezing tokens for a specific amount of time so it disables you from trading, buying, or selling TRX tokens until the time they unfreeze.</p><h3>Bandwidth</h3><p>TRON bandwidth helps you perform transactions without gas fees as I've covered in the last episode but it also gives you the privilege of casting votes for electing TRON Super Representatives which I leave a practical link at the end of this post to freez tron and affix yourself to the TRON community as an active member.</p><h3>Energy</h3><p>TRON energy is used to process the smart contracts. By sufficient Energy contracts get processed rapidly and there are no hindrances in moving your TRX tokens from one end to another.</p><p><em>you can earn Energy and Bandwidth by freezing TRX which the tutorial is <a href="https://youtu.be/CJN7hfX8m3A">here</a></em><br><br>It is important to learn that TRON Bandwidth serves the purpose of sending TRX tokens where you can freeze the Bandwidth to gain more Energy. Meanwhile, TRON Energy is used for running smart contracts. Hence, both resources, TRON Bandwidth and TRON Energy, are interconnected with each other. While using TRON dApps, it is advised not to run out of Energy as one burned TRON Energy can cost approximately 1.3 TRX tokens. Transferring TRC10 tokens consumes Bandwidth while the transfer of TRC20, which are smart contract-compatible tokens, takes up Bandwidth as well as Energy.<a href="https://www.namecoinnews.com/tron-bandwidth-and-energy/">(here's the source for this paragraph;))</a></p><p>So that's it for Energy and Bandwith, next we'd go through accounts..</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-2</guid><title>Quick summery on TRON (ep-02)</title><description>In this post we will look a bit closer into transactions in TRON blockchain</description><link>https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-2</link><pubDate>Sun, 9 May 2021 08:21:00 +0430</pubDate><content:encoded><![CDATA[<h1>Quick summery on TRON (ep-02)</h1><h2>In this post we will look a bit closer into transactions in TRON blockchain</h2><p>Transation fees in TRON blockchain are free. wait! are they really free? lets get back to white paper again..<br><br>Ordinary transactions only consume bandwidth points, but smart contract operations consume both energy and bandwidth points. There are two types of bandwidth points available. Users can gain bandwidth points from freezing TRX, while 5000 free bandwidth points are also available daily.</p><p>So it depends, on which type of transactions you are talking about; and also on which standard?</p><p>When a TRX transaction is broadcast, it is transmitted and stored in the form of a byte array over the network. The byte array multiplied by bandwidth point rate would be the bandwidth Points consumed by one transaction. But it's not the only fee you have to pay, if a TRX or token transfer results in the target account being created you have to pay inorder to activate or create the account.</p><p><em>Mmm.. it's getting more complicated!!</em><br><br>No let's have several examples and so you'll see how simlpe they are..<br><br>First you need to now that for each user 5000 free bandwidth points are available daily.<br><br>- In an account creation scenario, the network will first consume the bandwidth points that the transaction initiator gained from freezing TRX(will be explained in the next ep). If this amount is insufficient, then the network consumes the transaction initiator‚Äôs TRX.<br><br>- In standard TRX transfer scenarios from one TRX account to another, the network first consumes the bandwidth points gained by the transaction initiator for freezing TRX. If that is insufficient, it then consumes from the free 5000 daily bandwidth points. If that is still not enough, then the network consumes the TRX of the transaction initiator.(the amount is calculated by the number of bytes in the transaction multiplied by 10 SUN.)<br><br>- For TRC-10 token transfers, the network first verifies whether the total free bandwidth points of the issued token asset are sufficient. If not, the bandwidth points obtained from freezing TRX are consumed. If there is still not enough bandwidth points, then it consumes the TRX of the transaction initiator.<br><em>So they are not literally free but as the price of the TRX is less than $0.2 while I'm writing this post, fees are almost free.</em></p><h3>TRON network also defines a set of fixed fees for the following transactions:</h3><ul><li>Creating a witness node: 9999 TRX</li><li>Issuing a TRC-10 token: 1024 TRX</li><li>Creating a new account: 0.1 TRX</li><li>Creating an exchange pair: 1024 TRX</li></ul><p>In the next post I would like to get deeper in bandwidth and energy in TRON blockchain..</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-1</guid><title>Quick summery on TRON (ep-01)</title><description>In these series I'm gonna share a quick summery on TRON blockchain</description><link>https://tech-diarios.io/posts/Tron/quick-summery-on-tron-part-1</link><pubDate>Sat, 8 May 2021 17:58:00 +0430</pubDate><content:encoded><![CDATA[<h1>Quick summery on TRON (ep-01)</h1><h2>Let's take a look at what they've said in their <strong>Vision</strong> section of white paper:</h2><blockquote><p>TRON is an ambitious project dedicated to the establishment of a truly decentralized Internet and its infrastructure. The TRON Protocol, one of the largest blockchain-based operating systems in the world, offers public blockchain support of high throughput, high scalability, and high availability for all Decentralized Applications (DApps) in the TRON ecosystem. The July 2018 acquisition of BitTorrent further cemented TRON‚Äôs leadership in pursuing a decentralized ecosystem.</p></blockquote><p>That seems like couple of great claims, let's get further.</p><p>lets start with it's architecture<br><br>TRON adopts a 3-layer architecture divided into Storage Layer, Core Layer, and Application Layer. The TRON protocol adheres to Google Protobuf, which intrinsically supports multi-language extension.</p><p>so TRON got it's own VM(TVM) which is initially forked from EVM and can connect seamlessly with the existing solidity smart contract.<br><br></p><p align="center">
  <img src="https://tech-diarios.io/Tron/tron-architecture.png">
</p><p>The compiler first translates the Solidity smart contract into bytecode readable and executable on the TVM. The TVM then processes data through opcode, which is equivalent to operating the logic of a stack-based finite state machine. Finally, the TVM accesses blockchain data and invokes External Data Interface through the Interoperation layer</p><p>TVM employs the concept of Energy. Different from the Gas mechanism on EVM which I would explain in next post ..</p>]]></content:encoded></item><item><guid isPermaLink="true">https://tech-diarios.io/posts/first-post</guid><title>I just launched my website locally</title><description>in less than 15 minutes and with the help of kiloloco's youtube channel ...</description><link>https://tech-diarios.io/posts/first-post</link><pubDate>Sun, 2 May 2021 11:38:00 +0430</pubDate><content:encoded><![CDATA[<h1>I just launched my website locally</h1><p>Let's get to work, in less than 15 minutes and with the help of kiloloco's youtube channel, now I have my own website locally. after somoe adjustments in UI we will have it on the web with tech-diarios domain.</p>]]></content:encoded></item></channel></rss>